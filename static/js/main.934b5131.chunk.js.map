{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","components/HomePage/HomePage.tsx","components/TabsPage/TabsPage.tsx","components/ErrorPage/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["getNavClass","isActive","classNames","Navigation","className","to","App","HomePage","tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","useMemo","find","currentTab","map","ErrorPage","Root","path","element","index","replace","container","document","getElementById","createRoot","render"],"mappings":"iPAIMA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC3D,cAAe,CACb,YAAaD,GAFG,EAMPE,EAAuB,kBAClC,qBACE,UAAQ,MACRC,UAAU,qDAFZ,SASE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBAIA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,wBAhB4B,ECHvBM,G,kBAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,GCLNG,EAAqB,kBAChC,oBAAIH,UAAU,QAAd,sBADgC,ECE5BI,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAChC,IAAQC,EAAUC,cAAVD,MAEFE,EAAcC,mBAAQ,WAC1B,OAAOR,EAAKS,MAAK,SAAAC,GAAU,OAAIA,EAAWT,KAAOI,CAAtB,GAC5B,GAAE,CAACA,IAEJ,OACE,qCACE,oBAAIT,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKW,KAAI,SAAAD,GAAU,OAClB,oBACE,UAAQ,MAERd,UAAWF,IAAW,CACpB,YAAaW,IAAUK,EAAWT,KAJtC,SAOE,cAAC,IAAD,CAAMJ,GAAE,aAAQa,EAAWT,IAA3B,SACGS,EAAWR,SANTQ,EAAWT,GAHA,QAgBvBM,EACC,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,gBACGW,QADH,IACGA,OADH,EACGA,EAAaJ,UAGhB,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,mCAMP,EC/CYgB,G,MAAsB,kBACjC,yBAAShB,UAAU,aAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,oBAAIA,UAAU,QAAd,8BAMF,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,QAAd,SACG,0BAGH,mFAhByB,GCQtBiB,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,QAGjC,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUlB,GAAG,IAAIoB,SAAO,MAEnC,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,YAdb,ECRdG,EAAYC,SAASC,eAAe,QAE1CC,qBAAWH,GACRI,OACC,cAAC,EAAD,I","file":"static/js/main.934b5131.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst getNavClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'is-active': isActive,\n  },\n);\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"Nav\"\n    className=\"\n      navbar\n      is-light\n      is-fixed-top\n      is-mobile\n      has-shadow\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink to=\"/\" className={getNavClass}>\n          Home\n        </NavLink>\n\n        <NavLink to=\"/tabs\" className={getNavClass}>\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home page\n  </h1>\n);\n","import React, { useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId } = useParams();\n\n  const selectedTab = useMemo(() => {\n    return tabs.find(currentTab => currentTab.id === tabId);\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(currentTab => (\n            <li\n              data-cy=\"Tab\"\n              key={currentTab.id}\n              className={classNames({\n                'is-active': tabId === currentTab.id,\n              })}\n            >\n              <Link to={`../${currentTab.id}`}>\n                {currentTab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {selectedTab ? (\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab?.content}\n        </div>\n      ) : (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './ErrorPage.scss';\n\nexport const ErrorPage: React.FC = () => (\n  <section className=\"error-page\">\n    <div className=\"container\">\n      <div className=\"error-page__content\">\n        <div className=\"error-page--bg\">\n          <h1 className=\"title\">\n            Page not found\n          </h1>\n\n        </div>\n\n        <div className=\"error-page__description\">\n          <h3 className=\"label\">\n            {'Look like you\\'re lost'}\n          </h3>\n\n          <p>\n            the page you are looking for not avaible!\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import {\n  HashRouter,\n  Navigate,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\nimport { ErrorPage } from './components/ErrorPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"tabs\">\n          <Route path=\":tabId?\" element={<TabsPage />} />\n        </Route>\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}